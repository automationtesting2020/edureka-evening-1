When you are working first time in GIT

1) Create a file with name akshat.txt 
with content hi i am akshat

touch akshat.txt

2) git init   #initialize the git 

3) git status   

4) git add .  # add this file akshat.txt in the staging area 

5) git status #you will see akshat.txt is in green color which means it is in staging area

6) git rm --cached akshat.txt   #put back the file from the staging area to the WD again 

7) git status   #you will see that akshat.txt is in red color which means in the WD

8) git add .   # again adding the file akshat.txt to the staging area 

9)  Make some change in the content of akshat.txt file. lets say add a new line i am teaching

git diff akshat.txt  #you will see the line which is updated 

10) git add . 

11) git config --global user.name "akshatgupta07"

12) git config --global user.email "akshu20791@gmail.com"

13) git config --list | grep user.name

14) git config --list | grep user.email 

#grep command is used to search the matching pattern ...like ctrl f in ms word

15) git commit -m"created akshat.txt file"  ## save the file as version 

16) git log   #show all the commits

17) git log --oneline #show commits in one line

18) create a account on github and create a repo on github.com

19) git remote add origin <<repo link>>

20) git push -u origin master 

It will ask for authentication
if it is not showing authentication then go to window credential manager and remove user name and passworf for git hun[see recording video of that]
go to github.com (login) and in new tab open https://github.com/settings/tokens -> generate token 

copy paste the token

you will see the github repo updated 

----------Branching and merging---------


Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore
        .gitignore.swp
        user_logs.txt

nothing added to commit but untracked files present (use "git add" to track)

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (master)
$ cat>>.gitignore
user_logs.txt

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore
        .gitignore.swp

nothing added to commit but untracked files present (use "git add" to track)

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (master)
$ git branch branch1

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (master)
$ git check from branch
git: 'check' is not a git command. See 'git --help'.

The most similar command is
        checkout

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (master)
$ git checkout from branch
error: pathspec 'from' did not match any file(s) known to git
error: pathspec 'branch' did not match any file(s) known to git

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (master)
$ git branch1
git: 'branch1' is not a git command. See 'git --help'.

The most similar command is
        branch

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (master)
$ git checkout branch1
Switched to branch 'branch1'

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (branch1)
$ touch file1.txt

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (branch1)
$ git status
On branch branch1
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore
        .gitignore.swp
        file1.txt

nothing added to commit but untracked files present (use "git add" to track)

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (branch1)
$ git commit -m"file1_created in branch1"
On branch branch1
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore
        .gitignore.swp
        file1.txt

nothing added to commit but untracked files present (use "git add" to track)

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (branch1)
$ git add .

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (branch1)
$ git status
On branch branch1
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   .gitignore
        new file:   .gitignore.swp
        new file:   file1.txt


Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (branch1)
$ git checkout master
Switched to branch 'master'
A       .gitignore
A       .gitignore.swp
A       file1.txt
Your branch is up to date with 'origin/master'.

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (master)
$ git checkout branch1
Switched to branch 'branch1'
A       .gitignore
A       .gitignore.swp
A       file1.txt

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (branch1)
$ git checkout master
Switched to branch 'master'
A       .gitignore
A       .gitignore.swp
A       file1.txt
Your branch is up to date with 'origin/master'.

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (master)
$ git branch branch2

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (master)
$ git checkout branch2
Switched to branch 'branch2'
A       .gitignore
A       .gitignore.swp
A       file1.txt

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (branch2)
$ touch file2.txt

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (branch2)
$ git add .

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (branch2)
$ git commit -m"created file2 in branch2 only"
[branch2 e6fa5bc] created file2 in branch2 only
 4 files changed, 7 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 .gitignore.swp
 create mode 100644 file1.txt
 create mode 100644 file2.txt

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (branch2)
$ git status
On branch branch2
nothing to commit, working tree clean

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (branch2)
$ git checkout branch1
Switched to branch 'branch1'

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (branch1)
$ git status
On branch branch1
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        project_logs.txt
        user_logs.txt

nothing added to commit but untracked files present (use "git add" to track)

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (branch1)
$ git checkout master
Switched to branch 'master'
Your branch is up to date with 'origin/master'.

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        project_logs.txt
        user_logs.txt

nothing added to commit but untracked files present (use "git add" to track)

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (master)
$ git checkout branch2
Switched to branch 'branch2'

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (branch2)
$ git checkout branch1
Switched to branch 'branch1'

Admin@DESKTOP-IRU5H25 MINGW64 /g/Edureka (branch1)
$ git











